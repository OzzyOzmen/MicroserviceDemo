version: '3.4'

networks:
  frontend:
  backend:

services:

  sql.data:
    image: microsoft/mssql-server-linux:2017-latest
    ports:
      - "1455:1433"
    environment:
      - SA_PASSWORD=ProductApi(!)
      - ACCEPT_EULA=Y
      - MSSQL_PID=Express
    container_name: microserviceDemo
    networks:
      - backend

  auth.api:
    image: ${DOCKER_REGISTRY}authapi
    build:
      context: .
      dockerfile: Services/Auth/Auth.API/Dockerfile
    environment:
      - ConnectionString=${ESHOP_AZURE_CATALOG_DB:-Server=10.0.75.1,1455;Database=MicroserviceDemo.Services.AuthDb;User Id=sa;Password=ProductApi(!);MultipleActiveResultSets=True}
    networks:
      - backend
      - frontend
    depends_on:
      - sql.data
    ports:
      - "4001:80"

  department.api:
    image: ${DOCKER_REGISTRY}departmentapi
    build:
      context: .
      dockerfile: Services/Department/Department.API/Dockerfile
    environment:
      - ConnectionString=${ESHOP_AZURE_CATALOG_DB:-Server=10.0.75.1,1455;Database=MicroserviceDemo.Services.DepartmentDb;User Id=sa;Password=ProductApi(!);MultipleActiveResultSets=True}
    networks:
      - backend
      - frontend
    depends_on:
      - sql.data
    ports:
      - "4002:80"

  employee.api:
    image: ${DOCKER_REGISTRY}employeeapi
    build:
      context: .
      dockerfile: Services/Employee/Employee.API/Dockerfile
    environment:
      - ConnectionString=${ESHOP_AZURE_CATALOG_DB:-Server=10.0.75.1,1455;Database=MicroserviceDemo.Services.EmployeeDb;User Id=sa;Password=ProductApi(!);MultipleActiveResultSets=True}
    networks:
      - backend
      - frontend
    depends_on:
      - sql.data
    ports:
      - "4003:80"

