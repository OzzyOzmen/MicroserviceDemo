version: '3.4'

networks:
  frontend:
  backend:

services:

  sql.data:
    image: microsoft/mssql-server-linux:2017-latest
    ports:
      - "1455:1433"
    environment:
      - SA_PASSWORD=ProductApi(!)
      - ACCEPT_EULA=Y
      - MSSQL_PID=Express
    container_name: microserviceDemo
    networks:
      - backend

  auth.api:
    image: demo/auth.api:${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Auth/Auth.API/Dockerfile
    networks:
      - backend
      - frontend
    depends_on:
      - sql.data


  department.api:
    image: demo/department.api:${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Department/Department.API/Dockerfile
    networks:
      - backend
      - frontend
    depends_on:
      - sql.data


  employee.api:
    image: demo/employee.api:${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Employee/Employee.API/Dockerfile
    networks:
      - backend
      - frontend
    depends_on:
      - sql.data


  mobileapigateway:
    image: demo/ocelotapigw:${TAGE:-latest}
    build:
      context: .
      dockerfile: ApiGateways/BaseApiGateway/OcelotBaseAPIGateway/Dockerfile
    depends_on:
      - sql.data
      - auth.api
      - department.api
      - employee.api

  webapigateway:
    image: demo/ocelotapigw:${TAGE:-latest}
    build:
      context: .
      dockerfile: ApiGateways/BaseApiGateway/OcelotBaseAPIGateway/Dockerfile
    depends_on:
      - sql.data
      - auth.api
      - department.api
      - employee.api


  mobileagg:
    image: demo/mobileagg:${TAGE:-latest}
    build:
      context: .
      dockerfile: ApiGateways/Mobile.Bff/Mobile.HttpAggregator/Dockerfile
    depends_on:
      - sql.data
      - auth.api
      - department.api
      - employee.api

